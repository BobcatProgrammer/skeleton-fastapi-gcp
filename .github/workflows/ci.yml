# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  python-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    env:
      WORKING_DIR: ./app
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: Gr1N/setup-poetry@v4
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        working-directory: ${{env.WORKING_DIR}}
        run: |
          poetry install
      - name: Check dependencies
        working-directory: ${{env.WORKING_DIR}}
        run: |
          poetry check
      - name: Lint with flake8
        working-directory: ${{env.WORKING_DIR}}
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Check typing with mypy
        working-directory: ${{env.WORKING_DIR}}
        run: |
          mypy app.py
          mypy -p app
      - name: Test with pytest
        working-directory: ${{env.WORKING_DIR}}
        run: |
          poetry run pytest
  # This workflow contains a single job called "build"
  build:
    needs: [python-test]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      APP_PATH: "/github/workspace/app/"
      IMG_NAME: "skeleton-fastapi-gcp"
      REGISTRY: "ghcr.io/BobcatProgrammer"
      BUILDER: "gcr.io/buildpacks/builder:v1"
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get git info
        run: |
          echo "GIT_SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD | sed 's/[^a-zA-Z0-9]/-/g')" >> $GITHUB_ENV
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Pack Remote Build
        uses: dfreilich/pack-action@v1.1
        with:
          args: "build --builder ${{ env.BUILDER }} --path ${{ env.APP_PATH }}  ${{ env.REGISTRY }}/${{ env.IMG_NAME }}:${{ env.GIT_SHORT_SHA }}"
